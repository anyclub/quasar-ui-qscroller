(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[10],{2514:function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("section",{staticClass:"page-header"},[a("div",{staticClass:"donate"},[a("a",{attrs:{href:e.donateUrl,target:"_blank",title:"Donate"}},[a("i",{staticClass:"fas fa-heart",staticStyle:{color:"red"}})])]),a("div",{staticClass:"text-h1 project-name"},[e._v(e._s(e.title))]),a("div",{staticClass:"text-h2 project-tagline"},[e._v(e._s(e.tagline))]),a("q-btn",{staticClass:"btn",attrs:{type:"a",href:e.locationUrl,target:"_blank",label:"View on GitHub","no-caps":"",flat:""}}),a("q-btn",{staticClass:"btn",attrs:{to:"/docs",label:"Docs","no-caps":"",flat:""}}),a("q-btn",{staticClass:"btn",attrs:{to:"/examples",label:"Examples","no-caps":"",flat:""}}),e.hasInteractiveDemo?a("q-btn",{staticClass:"btn",attrs:{to:"/demo",label:"Interactive Demo","no-caps":"",flat:""}}):e._e(),a("q-btn",{staticClass:"btn",attrs:{type:"a",href:e.donateUrl,target:"_blank",label:"Donate","no-caps":"",flat:""}}),a("div",{staticClass:"row justify-evenly items-center q-ma-sm"},[a("div",{staticClass:"quasar"},[e._v(e._s(e.quasarDesc))]),a("div",{staticClass:"byline"},[e._v(e._s(e.byline)),a("a",{attrs:{href:e.bylineTwitter,target:"_blank",title:"Twitter"}},[a("i",{staticClass:"fab fa-twitter"})])])])],1),a("main",{staticClass:"flex flex-start justify-center inset-shadow"},[a("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg inset-shadow",staticStyle:{width:"100%",height:"3px"}}),a("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg shadow-1",staticStyle:{"max-width":"800px",width:"100%"}},[e._t("default")],2)])])},r=[],o={name:"Hero",data:function(){return{title:"QScroller",tagline:"Embeddable Scrollers for your Quasar App",byline:"Created and maintained by Jeff Galbraith",bylineTwitter:"https://twitter.com/jgalbraith64",quasarDesc:"A Quasar Framework Component and App Extension",locationUrl:"https://github.com/quasarframework/quasar-ui-qscroller",donateUrl:"https://github.com/sponsors/hawkeye64",hasInteractiveDemo:!0}}},s=o,l=a("2877"),i=a("eebe"),d=a.n(i),c=a("9c40"),h=Object(l["a"])(s,n,r,!1,null,null,null);t["a"]=h.exports;d()(h,"components",{QBtn:c["a"]})},"8b24":function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("hero",[a("q-markdown",{attrs:{src:e.markdown,toc:""},on:{data:e.onToc}}),a("json-api-viewer",{attrs:{title:"QScroller API",json:e.json}}),a("q-markdown",[e._v("\n# Donate\nIf you appreciate the work that went into this, please consider donating to [Quasar](https://donate.quasar.dev) or [Jeff](https://github.com/sponsors/hawkeye64).\n\n---\n\nThis page created with [QMarkdown](https://quasarframework.github.io/quasar-ui-qmarkdown), another great Quasar App Extension.\n    ")]),a("q-page-scroller",{attrs:{position:"bottom-right","scroll-offset":150,offset:[18,18]}},[a("q-btn",{class:{"text-black bg-grey-4":e.$q.dark.isActive,"text-white bg-primary":!e.$q.dark.isActive},attrs:{fab:"",icon:"keyboard_arrow_up"}})],1)],1)},r=[],o=a("2514"),s="QScroller\n===\n\n> Please note, this is currently a very much work-in-progress (WIP). This component recently went through a very rigorous rewrite/refactor to improve on some issues. The documentation and examples will continuously be improved.\n\n::: warning\nIf you were using a previous version, please read the information below for converting to the new version, in particular the `view` property. This may be the only change you need to make (hopefully). If you used the property `hour24-format` the default is now 24 hour format. If you want 12 hour format, use the new `hour12` property.\n:::\n\n**QScroller** is a powerful selection component that plugs right into your Quasar application.\n\n# Features\nThere are many sub-views available within the component:\n- string\n- time\n- time-range\n- date\n- date-range\n- date-time\n\n# Installation Types\n\n## Quasar CLI\n\n**App Extension**\n\n:::\n#### Install\n\nTo add as an App Extension to your Quasar application, run the following (in your Quasar app folder):\n```\nquasar ext add @quasar/qscroller\n```\n\n#### Uninstall\n\nTo remove as an App Extension from your Quasar application, run the following (in your Quasar app folder):\n```\nquasar ext remove @quasar/qscroller\n```\n\n#### Describe\nWhen installed as an App Extension, you can use `quasar describe QScroller`\n:::\n\n**OR**:\n\n:::\nCreate and register a boot file:\n\n```js\nimport Vue from 'vue'\nimport Plugin from '@quasar/quasar-ui-qscroller'\nimport '@quasar/quasar-ui-qscroller/dist/index.css'\n\nVue.use(Plugin)\n```\n:::\n\n**OR**:\n\n:::\n```html\n<style src=\"@quasar/quasar-ui-qscroller/dist/index.css\"></style>\n\n<script>\nimport { QScroller } from '@quasar/quasar-ui-qscroller'\n\nexport default {\n  components: {\n    QScroller\n  }\n}\n<\/script>\n```\n:::\n\n## Vue CLI project\n\n:::\n```js\nimport Vue from 'vue'\nimport Plugin from '@quasar/quasar-ui-qscroller'\nimport '@quasar/quasar-ui-qscroller/dist/index.css'\n\nVue.use(Plugin)\n```\n:::\n\n**OR**:\n\n:::\n```html\n<style src=\"@quasar/quasar-ui-qscroller/dist/index.css\"></style>\n\n<script>\nimport { QScroller } from '@quasar/quasar-ui-qscroller'\n\nexport default {\n  components: {\n    QScroller\n  }\n}\n<\/script>\n```\n:::\n\n## UMD variant\n\nExports `window.QScroller`.\n\nAdd the following tag(s) after the Quasar ones:\n\n:::\n```html\n<head>\n  \x3c!-- AFTER the Quasar stylesheet tags: --\x3e\n  <link href=\"https://cdn.jsdelivr.net/npm/@quasar/quasar-ui-qscroller/dist/index.min.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body>\n  \x3c!-- at end of body, AFTER Quasar script(s): --\x3e\n  <script src=\"https://cdn.jsdelivr.net/npm/@quasar/quasar-ui-qscroller/dist/index.umd.min.js\"><\/script>\n</body>\n```\nIf you need the RTL variant of the CSS, then go for the following (instead of the above stylesheet link):\n```html\n<link href=\"https://cdn.jsdelivr.net/npm/@quasar/quasar-ui-qscroller/dist/index.rtl.min.css\" rel=\"stylesheet\" type=\"text/css\">\n```\n:::\n\n[UMD Example on Codepen](https://codepen.io/Hawkeye64/pen/QWWaaqd)\n\n# Information\n\n## Docs\nCan be found [here](https://quasarframework.github.io/quasar-ui-qscroller).\n\n## Examples\nCan be found [here](https://quasarframework.github.io/quasar-ui-qscroller/examples).\n\n## Interactive Demo\nCan be found [here](https://quasarframework.github.io/quasar-ui-qscroller/demo).\n\n## Demo (source) Project\nCan be found [here](https://github.com/quasarframework/quasar-ui-qscroller/tree/master/demo).\n\n---\n\n# Converting from previous version\n\nFrom **v1.0.4** to **v1.0.5**:\n\nYou no longer need to do this:\n```js\nimport { Component as QScroller } from '@quasar/quasar-ui-qscroller'\n```\ninstead you can do this:\n```js\nimport { QScroller } from '@quasar/quasar-ui-qscroller'\n```\n---\n\nFrom **beta** to **v1.0.0**:\n\n- `hour24-format` no longer exists. The default is now a 24-hour clock. If you wish to show a 12-hour clock, use the `hour12` property\n- `color` has been renamed `text-color`\n- `background-color` has been renamed `color`\n- `inner-color` has been renamed `inner-text-color`\n- `inner-background-color` has been renamed to `inner-color`\n- some properties have been temporarily removed: `short-year-label`, `short-month-label`, `short-day-label`, and `show-weekday-label`. Other properties that were not programmed have also been removed (ie: min/max props)\n\n---\n\n# Working with QScroller\n\nIn order to get the best potential from QScroller it is important to understand all aspects which will be described below.\n\nFirst and foremost, the native date format used internally for date-types, and with the v-model, is `YYYY-mm-dd`. This is to avoid confusion with positioning of the day and month in other date format locales as well as date separator. All incoming and outgoing dates will use this format.\n\nThe internal time format used internally for time-types is 24-hour clock (`HH:mm`) or also known as military time.\n\nThe default locale of QScroller is **en-us**. This can easily be changed via the `locale` property. Any area of each scroller that displays text and numbers is locale-aware.\n\nThe external div of the Scroller is set to take 100% width and height. Therefore, it is very important to either wrap it with a width/height controlling div, or set the height and width via the `style` attribute:\n\n```html\n    <q-scroller\n      v-model=\"value\"\n      view=\"date\"\n      style=\"max-width: 280px; height: 200px;\"\n    ></q-scroller>\n```\n\nQScroller can also be customized with any sort of color. Whether it be from the [Quasar Color Pallete](https://quasar.dev/style/color-palette), CSS named color (ie: `ghostwhite`), any rgb(a), hls(a) or # color (`#ccc`).\n\n# QScroller views\n\nQScroller has a property `view` which can take one of the following:\n- string\n- time\n- time-range\n- date\n- date-range\n- date-time\n\n\n## string view\n\n![QScroller](statics/q-scroller.png =200x200)\n\n\nThe `string` view can take any type of arbitray data and display it in a list-like manner so an item can be selected. All other scrollers have this base functionality. Some scrollers, will be based on multiple instances of this functionality.\n\nEach row in a scroller instance is a **QBtn**. As a result of this, you have all of the properties available to you as you would for QBtn. However, this only applies to `string` view as the other scrollers generate data for selection (being based on dates and times).\n\nThe data pushed into the `items` propery of the `string` view is an array of objects, that looks like the properties for **QBtn**. Only the `value` property is required when you pass in an array of objects.\n\nExample:\n\n```js\ndata: [\n  { value: 'Anteater', noCaps: true, icon: '', iconRight: '', disabled: false, align: 'around' },\n  { value: 'Baboons', noCaps: true, icon: '', iconRight: '', disabled: false, align: 'around' },\n  { value: 'Cheetah', noCaps: true, icon: '', iconRight: '', disabled: false, align: 'around' },\n  { value: 'Chimpanzee', noCaps: true, icon: '', iconRight: '', disabled: false, align: 'around' },\n  ...\n]\n```\n\nAdditionally, there is one other property that can be added to the array of objects and this is the `display` property.\n\nFor example:\n```js\n{ value: '1', display: 'Anteater', noCaps: true, icon: '', iconRight: '', disabled: false, align: 'around' },\n```\n\nWhen this property is available, this is what will be displayed to the User, but when selected, it's the `value` that will updated using the emit for the `input` event.\n\nThen, your `v-model` variable should contain a `value` from your list for an initial selection. And, the `v-model` variable will be populated with `value` data upon user selection. If your `v-model` does not contain a proper match, the first item in the list will automatically be selected.\n\n## time view\n\n![Time view](statics/q-time-scroller.png =200x200) ![Time view-ampm](statics/q-time-scroller-ampm.png =200x200)\n\nWhen `view=\"time\"` the scroller will show the current time clock. If the `v-model` contains an empty string, the current time will be selected. And, the emit for `input` will be a string.\n\nUsing the `hour12` property will show the ante meridiem (AM) and post meridiem (PM) periods. To change the values of `AM` or `PM`, use the `am-pm-labels` property.\n\nThe `v-model` can take types containing String, Array, Object, or Date. See the `v-model` section below on usage.\n\n## time-range view\n\n![time-range view](statics/q-time-range-scroller.png =200x200) ![time-range view-ampm](statics/q-time-range-scroller-ampm.png =200x200)\n\nWhen `view=\"time-range\"` the scroller will show the current time clock in a start and an end section. If the `v-model` contains an empty string, the current time will be selected. And, the emit for `input` will be a string.\n\nUsing the `hour12` property will show the ante meridiem (AM) and post meridiem (PM) periods. To change the values of `AM` or `PM`, use the `am-pm-labels` property.\n\nIf the end section becomes less than the start section, a color indicator will be used. You can change the color using the `error-color` and `error-text-color` properties. Should this occur, the `invalid-range` event will be emitted. It contains an object with keys `startDate` and `endDate` which contains the string representation of the times.\n\nThe `v-model` can take an array of types containing String, Array, Object, or Date. See the `v-model` section below on usage.\n\n## date view\n\n![date view](statics/q-date-scroller.png =200x200)\n\nWhen `view=\"date\"` the scroller will show dates. If the `v-model` contains an empty string, the current date will be selected. And, the emit for `input` will be a string. The default is 5 years before and after the current date. You can control this with the `year-begin` and `year-stop` properties.\n\nThe `v-model` can take types containing String, Array, Object, or Date. See the `v-model` section below on usage.\n\n## date-range view\n\n![date-range view](statics/q-date-range-scroller.png =300x300)\n\nWhen `view=\"date-range\"` the scroller will show the dates in a start and end section. If the `v-model` contains an empty string, the current date will be selected for both. And, the emit for `input` will be a string. The default is 5 years before and after the current date. You can control this with the `start-year-begin`, `start-year-stop`, `end-year-begin` and `end-year-stop` properties for the respective start and end sections.\n\nIf the end section becomes less than the start section, a color indicator will be used. You can change the color using the `error-color` and `error-text-color` properties. Should this occur, the `invalid-range` event will be emitted. It contains an object with keys `startDate` and `endDate` which contains the string representation of the currently selected dates.\n\nThe `v-model` can take an array of types containing String, Array, Object, or Date. See the `v-model` section below on usage.\n\n\n## date-time view\n\n![date-time view](statics/q-date-time-scroller.png =300x300) ![date-time view-ampm](statics/q-date-time-scroller-ampm.png =300x300)\n\nWhen `view=\"date-time\"` the scroller will show date and time selection. If the `v-model` contains an empty string, the current date and time will be selected. And the emit for `input` will be a string. The default is 5 years before and after the current date. You can control this with the `year-begin` and `year-stop` properties.\n\nUsing the `hour12` property will show the ante meridiem (AM) and post meridiem (PM) periods. To change the values of `AM` or `PM`, use the `am-pm-labels` property.\n\nThe `v-model` can take types containing String, Array, Object, or Date. See the `v-model` section below on usage.\n\n# Locale\n\nThe default locale is `en-us`. To change it, use the `locale` property and pass an appropriate locale.\n\n# Colorizing\n\nAnywhere you see a `color`-type property, this refers to the background. `text-color` refers to the foreground, or text, color.\n\nFor any color property, you can use any color from the [Quasar Color Pallete](https://quasar.dev/style/color-palette), CSS named color, any rgb(a), hls(a) or # color.\n\n# Error indicator\n\nWhenever a date or time range is used, the sections are known as `start` and `end`. If the `end` section is less than the `start` section, the `color` and `text-color` will change to indicate an error. The defaults are variants of red. You can change this to your own color by setting the `error-color` and `error-text-color` respectively.\n\nAlso, when this occurs, the the `invalid-range` will be emitted with an object containing the data from the start and end sections.\n\nYou can turn off the error checking by setting the `disable-validation` property.\n\n# Disable\n\nWhen the property `disable` is used, you may find that the default disable color of `grey-7` makes it difficult to see the text, based on your selected background color. In situations like this, you can use the `disabled-text-color` property to change it to something more visible.\n\n# v-model\nFor all view types, except `string`, you can pass `v-model` data as a `String`, `Object`, `Array` or `Date`. Whatever is passed in will be the same as passed out in the `input` event. If `v-model` is an empty string, then the `String` type will be used.\n\nAll numbers can be `Number` or `String` (quoted) values; examples below of mixed values.\n\nWhere `view=\"time\"` you can use one of the following for `v-model`:\n\n```js\n  data () {\n    return {\n      valueStr: '09:00',\n      valueObj: { hour: '09', minute: '10' },\n      valueArr: [ '09', '20'],\n      valueDate: new Date()\n    }\n  },\n```\n\nWhere `view=\"date\"` you can use one of the following for `v-model`:\n\n```js\n  data () {\n    return {\n      valueStr: '2020-10-01',\n      valueObj: { year: '2020', month: '11', day: 10 },\n      valueArr: [ 2020, 12, '25'],\n      valueDate: new Date()\n    }\n  },\n```\n\nWhere `view=\"time-range\"` you can use one of the following for `v-model`:\n\n```js\n  data () {\n    return {\n      valueStr: ['09:00','09:00'],\n      valueObj: [{ hour: '09', minute: '10' },{ hour: '09', minute: '10' }],\n      valueArr: [[ '09', '20'],[ '09', '20']],\n      valueDate: [new Date(), new Date()]\n    }\n  },\n```\n\nWhere `view=\"date-range\"` you can use one of the following for `v-model`:\n\n```js\n  data () {\n    return {\n      valueStr: [ '2020-10-01', '2020-10-01' ],\n      valueObj: [{ year: '2020', month: '11', day: 10 }, { year: '2020', month: '11', day: 10 }],\n      valueArr: [[ 2020, 12, '25' ], [ 2020, 12, '25' ]],\n      valueDate: [new Date(), new Date()]\n    }\n  },\n```\n\nAnd finally, where `view=\"date-time\"` you can use one of the following for `v-model`:\n\n```js\n  data () {\n    return {\n      valueStr: '2020-10-01 10:10',\n      valueObj: { year: '2020', month: '11', day: 10, hour: 12, minute: 35 },\n      valueArr: [ 2020, 12, '25', '08', '05'],\n      valueDate: new Date()\n    }\n  },\n```\n\n::: info\nWhatever format is used for the `v-model` will be the same format returned via the `input` emit.\n:::\n",l=a("e2ee"),i={name:"PageIndex",components:{Hero:o["a"]},data:function(){return{markdown:s,json:l}},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{onToc:function(e){e.push({id:"QScroller-API",label:"QScroller API",level:1,children:Array(0)}),e.push({id:"Donate",label:"Donate",level:1,children:Array(0)}),this.toc=e}}},d=i,c=a("2877"),h=a("eebe"),p=a.n(h),u=a("5096"),m=a("9c40"),y=Object(c["a"])(d,n,r,!1,null,null,null);t["default"]=y.exports;p()(y,"components",{QPageScroller:u["a"],QBtn:m["a"]})},e2ee:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://quasarframework.github.io/quasar-ui-qscroller/docs"},"props":{"value":{"type":["String","Array","Object","Date"],"category":"model","applicable":["All"],"required":true,"desc":"The `type` property is dependent on the `view` property","examples":["v-model=\\"myVar\\""]},"view":{"type":"String","category":"behavior","applicable":["string","time","date","time-range","date-range","date-time"],"required":true,"desc":"This determines the type of scroller to be used","values":["string","time","date","time-range","date-range","date-time"],"examples":["view=\\"string\\"","view=\\"time-range\\"","view=\\"date-time\\""]},"bar-color":{"type":"String","category":"style","applicable":["All"],"desc":"This is the color of the middle bars. It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["bar-color=\\"blue-8\\"","bar-color=\\"#ccc\\"","bar-color=\\"ghostwhite\\""]},"border-color":{"type":"String","category":"style","applicable":["All"],"desc":"This is the color of outside border when `no-border` property is not `true`. It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["border-color=\\"blue-8\\"","border-color=\\"#ccc\\"","border-color=\\"ghostwhite\\""]},"color":{"type":"String","category":"style","applicable":["All"],"default":"primary","desc":"This is the color of the background (header and footer). It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["color=\\"blue-8\\"","color=\\"#ccc\\"","color=\\"ghostwhite\\""]},"text-color":{"type":"String","category":"style","applicable":["All"],"default":"white","desc":"This is the color of the text (header and footer). It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["text-color=\\"blue-8\\"","text-color=\\"#ccc\\"","text-color=\\"ghostwhite\\""]},"inner-color":{"type":"String","category":"style","applicable":["string","time","date","date-time"],"default":"white","desc":"This is the color of the background (scroller area). It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["inner-color=\\"blue-8\\"","inner-color=\\"#ccc\\"","inner-color=\\"ghostwhite\\""]},"inner-text-color":{"type":"String","category":"style","applicable":["string","time","date","date-time"],"default":"primary","desc":"This is the color of the text (scroller area). It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["inner-text-color=\\"blue-8\\"","inner-text-color=\\"#ccc\\"","inner-text-color=\\"ghostwhite\\""]},"disabled-text-color":{"type":"String","category":"style","applicable":["all"],"default":"grey-7","desc":"Sets the color that will be used when in the disabled state","examples":["disabled-text-color=\\"yellow-2\\"","disabled-text-color=\\"#dadada\\"","disabled-text-color=\\"ghostwhite\\""]},"disable-validation":{"type":"Boolean","category":"behavior","applicable":["time-range","date-range"],"desc":"Disables range checking validation (ie: allows right-side of range to be less than left-side range)","addedIn":"v1.0.0"},"error-color":{"type":"String","category":"style","applicable":["time-range","date-range"],"default":"red-1","desc":"This is the error color of the background (end inner section) when end section is less than start section. It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["error-color=\\"blue-8\\"","error-color=\\"#ccc\\"","error-color=\\"ghostwhite\\""]},"error-text-color":{"type":"String","category":"style","applicable":["time-range","date-range"],"default":"red-10","desc":"This is the error color of the text (end inner section) when end section is less than start section. It can be from the Quasar color palette or a CSS hash value (ie: \'#0000FF\')","examples":["error-text-color=\\"blue-8\\"","error-text-color=\\"#ccc\\"","error-text-color=\\"ghostwhite\\""]},"dense":{"type":"Boolean","category":"style","applicable":["All"],"desc":"If the component should be in dense mode"},"disable":{"type":"Boolean","category":"state","applicable":["All"],"desc":"If the component should be disabled"},"rounded-border":{"type":"Boolean","category":"style","applicable":["All"],"desc":"If the component should have rounded corners"},"no-border":{"type":"Boolean","category":"style","applicable":["All"],"desc":"If the component should not have a border"},"no-shadow":{"type":"Boolean","category":"style","applicable":["All"],"desc":"If the component should not display shadow when header/footer are displayed"},"no-header":{"type":"Boolean","category":"behavior","applicable":["All"],"desc":"If the component should not display the header"},"no-footer":{"type":"Boolean","category":"behavior","applicable":["All"],"desc":"If the component should not display the footer"},"hour12":{"type":"Boolean","category":"behavior","applicable":["time","time-range","date-time"],"desc":"Turns on 12 hour time"},"items":{"type":"Array","category":"content","applicable":["string"],"desc":"An array of objects","examples":["{ value: \'Anteater\', noCaps: true, icon: \'\', iconRight: \'\', disabled: false, align: \'around\' }"],"definition":{"value":{"type":"String","required":true,"desc":"This is the value that will be emitted when selected. It is also used for display, when the optional `display` property is not available"},"noCaps":{"type":"Boolean","desc":"If set to true, the displayed text will not be converted to uppercase"},"icon":{"type":"String","desc":"Optional icon to be used","examples":["icon: \'bolt\'"]},"iconRight":{"type":"String","desc":"Optional icon to be used on the right of the displayed text","examples":["iconRight: \'fas fa-calendar\'"]},"disabled":{"type":"Boolean","desc":"When set to true the item will be disabled"},"align":{"type":"String","desc":"How the text will be aligned within its area","values":["left","center","right","between","around","evenly"],"examples":["align: \'center\'","align: \'left\'"]}}},"locale":{"type":"String","category":"state","desc":"Changes the locale used for the header","default":"en-us","applicable":["date","date-range","date-time"],"examples":["locale=\\"ca\\""]},"am-pm-labels":{"type":"Array","category":"content","desc":"This is an array of two strings to replace the AM/PM labels. Only applicable when the `hour12` property is used","applicable":["time","date-time"],"default":"[\'AM\', \'PM\']","examples":[":am-pm-labels=\\"[\'a\', \'p\']\\""]},"hour-interval":{"type":["String","Number"],"category":"content","desc":"Used to create intervals. For instance, if \'2\', then every other value will be displayed","default":"1","applicable":["time","date-time"],"examples":[":hour-interval=\\"2\\""]},"minute-interval":{"type":["String","Number"],"category":"content","desc":"Used to create intervals. For instance, if \'2\', then every other value will be displayed","default":"1","applicable":["time","date-time"],"examples":[":minute-interval=\\"2\\""]},"disabled-hours":{"type":"Array","category":"content","desc":"Hours that should be disabled (always use 0 through to 24)","applicable":["time","date-time"],"examples":[":disabled-hours=\\"[17, 18, 19, 20, 21, 22, 23]\\""]},"disabled-minutes":{"type":"Array","category":"content","desc":"Minutes that should be disabled (always use 0 through to 59)","applicable":["time","date-time"],"examples":[":disabled-minutes=\\"[0, 1, 2, 3, 4, 5]\\""]},"no-hours":{"type":"Boolean","category":"content","desc":"Hide the hours section","applicable":["time","date-time"]},"no-minutes":{"type":"Boolean","category":"content","desc":"Hide the minutes section","applicable":["time","date-time"]},"display-separator":{"type":"String","category":"style","desc":"Provide an alternative display separator","applicable":["time-range","date-range"],"default":"\' - \'","examples":["display-separator=\\" : \\"","display-separator=\\" & \\""]},"start-am-pm-labels":{"type":"Array","category":"content","desc":"This is an array of two strings to replace the AM/PM labels. Only applicable when the `hour12` property is used","applicable":["time-range"],"default":"[\'AM\', \'PM\']","examples":[":start-am-pm-labels=\\"[\'a\', \'p\']\\""]},"end-am-pm-labels":{"type":"Array","category":"content","desc":"This is an array of two strings to replace the AM/PM labels. Only applicable when the `hour12` property is used","applicable":["time-range"],"default":"[\'AM\', \'PM\']","examples":[":end-am-pm-labels=\\"[\'a\', \'p\']\\""]},"start-hour-interval":{"type":["String","Number"],"category":"content","desc":"Used to create intervals. For instance, if \'2\', then every other value will be displayed","default":"1","applicable":["time-range"],"examples":[":start-hour-interval=\\"2\\""]},"end-hour-interval":{"type":["String","Number"],"category":"content","desc":"Used to create intervals. For instance, if \'2\', then every other value will be displayed","default":"1","applicable":["time-range"],"examples":[":end-hour-interval=\\"2\\""]},"start-minute-interval":{"type":["String","Number"],"category":"content","desc":"Used to create intervals. For instance, if \'2\', then every other value will be displayed","default":"1","applicable":["time-range"],"examples":[":start-minute-interval=\\"2\\""]},"end-minute-interval":{"type":["String","Number"],"category":"content","desc":"Used to create intervals. For instance, if \'2\', then every other value will be displayed","default":"1","applicable":["time-range"],"examples":[":end-minute-interval=\\"2\\""]},"start-disabled-hours":{"type":"Array","category":"content","desc":"Hours that should be disabled (always use 0 through to 24)","applicable":["time-range"],"examples":[":start-disabled-hours=\\"[17, 18, 19, 20, 21, 22, 23]\\""]},"end-disabled-hours":{"type":"Array","category":"content","desc":"Hours that should be disabled (always use 0 through to 24)","applicable":["time-range"],"examples":[":end-disabled-hours=\\"[17, 18, 19, 20, 21, 22, 23]\\""]},"start-disabled-minutes":{"type":"Array","category":"content","desc":"Minutes that should be disabled (always use 0 through to 59)","applicable":["time-range"],"examples":[":start-disabled-minutes=\\"[0, 1, 2, 3, 4, 5]\\""]},"end-disabled-minutes":{"type":"Array","category":"content","desc":"Minutes that should be disabled (always use 0 through to 59)","applicable":["time-range"],"examples":[":end-disabled-minutes=\\"[0, 1, 2, 3, 4, 5]\\""]},"start-no-hours":{"type":"Boolean","category":"content","desc":"Hide the hours section","applicable":["time-range"]},"end-no-hours":{"type":"Boolean","category":"content","desc":"Hide the hours section","applicable":["time-range"]},"start-no-minutes":{"type":"Boolean","category":"content","desc":"Hide the minutes section","applicable":["time","date-time"]},"end-no-minutes":{"type":"Boolean","category":"content","desc":"Hide the minutes section","applicable":["time","date-time"]},"disabled-years":{"type":"Array","category":"content","desc":"Array of years that should be disabled","applicable":["date","date-time"],"examples":[":disabled-years=\\"[ 2015, 2016, 2017, 2018, 2019 ]\\""]},"disabled-months":{"type":"Array","category":"content","desc":"Array of months that should be disabled","applicable":["date","date-time"],"examples":[":disabled-months=\\"[ 10, 11, 12 ]\\""]},"disabled-days":{"type":"Array","category":"content","desc":"Array of days that should be disabled","applicable":["date","date-time"],"examples":[":disabled-days=\\"[ 1, 2, 3 ]\\""]},"no-year":{"type":"Boolean","category":"content","desc":"Hide the years section","applicable":["date","date-time"]},"no-month":{"type":"Boolean","category":"content","desc":"Hide the months section","applicable":["date","date-time"]},"no-day":{"type":"Boolean","category":"content","desc":"Hide the day section","applicable":["date","date-time"]},"start-disabled-years":{"type":"Array","category":"content","desc":"Array of years that should be disabled","applicable":["date-range"],"examples":[":start-disabled-years=\\"[ 2015, 2016, 2017, 2018, 2019 ]\\""]},"end-disabled-years":{"type":"Array","category":"content","desc":"Array of years that should be disabled","applicable":["date-range"],"examples":[":end-disabled-years=\\"[ 2015, 2016, 2017, 2018, 2019 ]\\""]},"start-disabled-months":{"type":"Array","category":"content","desc":"Array of months that should be disabled","applicable":["date-range"],"examples":[":start-disabled-months=\\"[ 10, 11, 12 ]\\""]},"end-disabled-months":{"type":"Array","category":"content","desc":"Array of months that should be disabled","applicable":["date-range"],"examples":[":end-disabled-months=\\"[ 10, 11, 12 ]\\""]},"start-disabled-days":{"type":"Array","category":"content","desc":"Array of days that should be disabled","applicable":["date-range"],"examples":[":start-disabled-days=\\"[ 1, 2, 3 ]\\""]},"end-disabled-days":{"type":"Array","category":"content","desc":"Array of days that should be disabled","applicable":["date-range"],"examples":[":end-disabled-days=\\"[ 1, 2, 3 ]\\""]},"start-no-year":{"type":"Boolean","category":"content","desc":"Hide the years section","applicable":["date-range"]},"end-no-year":{"type":"Boolean","category":"content","desc":"Hide the years section","applicable":["date-range"]},"start-no-month":{"type":"Boolean","category":"content","desc":"Hide the months section","applicable":["date-range"]},"end-no-month":{"type":"Boolean","category":"content","desc":"Hide the months section","applicable":["date-range"]},"start-no-day":{"type":"Boolean","category":"content","desc":"Hide the day section","applicable":["date-range"]},"end-no-day":{"type":"Boolean","category":"content","desc":"Hide the day section","applicable":["date-range"]},"year-start":{"type":["Number","String"],"category":"content","desc":"This is the starting year to be used","applicable":["date"],"default":"5 years before current year","examples":["year-start=\\"2000\\""]},"year-end":{"type":["Number","String"],"category":"content","desc":"This is the ending year to be used","applicable":["date"],"default":"5 years after current year","examples":["year-end=\\"2025\\""]},"start-year-begin":{"type":["Number","String"],"category":"content","desc":"This is the starting year to be used for the start date section","applicable":["date-range"],"default":"5 years before current year","examples":["start-year-start=\\"2000\\""]},"start-year-stop":{"type":["Number","String"],"category":"content","desc":"This is the ending year to be used for the start date section","applicable":["date-range"],"default":"5 years after current year","examples":["start-year-end=\\"2025\\""]},"end-year-begin":{"type":["Number","String"],"category":"content","desc":"This is the starting year to be used for the end date section","applicable":["date-range"],"default":"5 years before current year","examples":["end-year-start=\\"2000\\""]},"end-year-stop":{"type":["Number","String"],"category":"content","desc":"This is the ending year to be used for the end date section","applicable":["date-range"],"default":"5 years after current year","examples":["end-year-end=\\"2025\\""]}},"scopedSlots":{"header":{"desc":"Used to replace the header, when displayed","scope":{"value":{"type":["String","Object","Array"],"desc":"When view is `string`, the returned value is the selected string value. For views of `date`, `time` and `date-time`, the returned value is a timestamp object. For views of `time-range` and `date-range` the returned value is an array of timestamp objects"}}},"footer":{"desc":"Used to replace the footer, when displayed","scope":{"value":{"type":["String","Object","Array"],"desc":"When view is `string`, the returned value is the selected string value. For views of `date`, `time` and `date-time`, the returned value is a timestamp object. For views of `time-range` and `date-range` the returned value is an array of timestamp objects"}}}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","applicable":["All"],"params":{"value":{"type":"Any","desc":"New model value","required":true}}},"invalid-range":{"desc":"Emitted when an end range value is less than the start range","applicable":["time-range","date-range"],"params":{"value":{"type":"Object","desc":"An object containing the current start and end ranges"}}},"close":{"desc":"Emitted when button on footer is clicked","applicable":["All"]}}}')}}]);